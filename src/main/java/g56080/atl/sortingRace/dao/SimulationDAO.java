package g56080.atl.sortingRace.dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import java.util.ArrayList;
import java.util.List;

import g56080.atl.sortingRace.dto.SimulationDTO;
import g56080.atl.sortingRace.exception.RepositoryException;
import g56080.atl.sortingRace.jdbc.DBManager;
import g56080.atl.sortingRace.view.SortingType;

public class SimulationDAO implements DAO<Integer, SimulationDTO>{

    private final DBManager db;

    private SimulationDAO(){
        db = DBManager.instance();
    }
    
    @Override
    public SimulationDTO select(Integer key){
        String query = "select * from SIMULATION where id = ?";
        SimulationDTO sdto = null;

        try(PreparedStatement pstmt = db.prepareStatement(query)){
            pstmt.setInt(1, key);
            ResultSet res = pstmt.executeQuery();
            if(res.next()){
                int sim_id = res.getInt(1);
                String sim_timestamp = res.getString(2);
                SortingType sim_type = SortingType.valueOf(res.getString(3).toUpperCase());
                int sim_maxSize = res.getInt(4);
                sdto = new SimulationDTO(sim_id, sim_timestamp, sim_type, sim_maxSize);
            }
        } catch(SQLException exc){
            throw new RepositoryException(exc);
        }

        return sdto;
    }

    @Override
    public List<SimulationDTO> selectAll(){
        String query = "select * from SIMULATION";
        List<SimulationDTO> sdtos = new ArrayList<>();

        try(Statement stmt = db.createStatement()){
            ResultSet res = stmt.executeQuery(query);
            while(res.next()){
                int sim_id = res.getInt(1);
                String sim_timestamp = res.getString(2);
                SortingType sim_type = SortingType.valueOf(res.getString(3).toUpperCase());
                int sim_maxSize = res.getInt(4);
                sdtos.add(new SimulationDTO(sim_id, sim_timestamp, sim_type, sim_maxSize));
            }
        } catch(SQLException exc){
            throw new RepositoryException(exc);
        }
        
        return sdtos;
    }

    @Override
    public Integer insert(SimulationDTO sdto){
        String query = "insert into SIMULATION(timestamp, sort_type, max_size) values(?, ?, ?)";
        Integer autoGeneratedKey = null;
        try(PreparedStatement pstmt = db.prepareStatement(query)){
            pstmt.setString(1, sdto.timestamp());
            pstmt.setString(2, sdto.type().toString());
            pstmt.setInt(3, sdto.max_size());
            pstmt.executeUpdate();

            ResultSet res = pstmt.getGeneratedKeys();
            if(res.next()){
                autoGeneratedKey = res.getInt(1);
            }
        } catch(SQLException exc){
            throw new RepositoryException(exc);
        }

        return autoGeneratedKey;
    }

    @Override
    public Integer update(SimulationDTO sdto){
        String query = """
            update SIMULATION
                set timestamp = ?, sort_type = ?, max_size = ?
                where id = ?;
        """;

        try(PreparedStatement pstmt = db.prepareStatement(query)){
            pstmt.setString(1, sdto.timestamp());
            pstmt.setString(2, sdto.type().toString());
            pstmt.setInt(3, sdto.max_size());
            pstmt.setInt(4, sdto.id());

            pstmt.executeUpdate();
        } catch(SQLException exc){
            throw new RepositoryException(exc);
        }

        return sdto.key();
    }

    public static SimulationDAO instance(){
        return Holder.INSTANCE;
    }

    private static class Holder{
        
        public final static SimulationDAO INSTANCE;

        static{
            INSTANCE = new SimulationDAO();
        }
    }

}

